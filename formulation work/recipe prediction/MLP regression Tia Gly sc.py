import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import make_classification
from sklearn.neural_network import MLPRegressor


clf = MLPRegressor(activation='logistic', solver='lbfgs', alpha=1e-03, hidden_layer_sizes=(300, 100), learning_rate_init=0.0001, max_iter=800)

X = [[0.54,39,1.5,0,0.5,0,0,0.3,0.5,0.5,7,0.1,0.1,0.5,5,10,34.46]
    ,[0.54,43.6,0.5,0,0.5,0,0,0.3,0.5,0.5,7,0.1,0.1,0.5,5,10,30.86]
    ,[0.54,43.6,0.5,0,0.5,2.5,0,0.3,0.5,0.5,7,0.1,0.1,0.5,5,10,28.36]
    ,[0.54,43.6,0.5,2,0.5,0,0,0.3,0.5,0.5,7,0.1,0.1,0.5,5,10,28.86]
    ,[0.61,43.6,1.5,0,0,0,0,0.3,0.5,0,7,0.1,0.1,0.5,5,10,30.79]
    ,[0.61,43.6,1.5,0,0.5,0,0,0.3,0.5,0.5,7,0.1,0.1,0.5,5,10,29.79]
    ,[0.54,43.6,0.5,0,0.5,0,0,0.3,0.5,0.5,7,0.1,0.1,0.5,5,10,30.86]
    ,[0.54,43.6,0.5,0,0.5,2.5,0,0.3,0.5,0.5,7,0.1,0.1,0.5,5,10,28.36]
    ,[0.54,43.6,0.5,2,0.5,0,0,0.3,0.5,0.5,7,0.1,0.1,0.5,5,10,28.86]
    ,[0.607,43.2,0.5,0,0.5,0,0,0.3,0.5,0.5,7,0.1,0.1,0.5,5,10,31.193]
    ,[0.607,43.2,0.5,0,0.5,0,0,0.3,0.5,0,7,0.1,0.1,0.5,5,10,31.693]
    ,[0.607,43.2,1,0,0.5,0,0,0.3,0.5,0,7,0.1,0.1,0.5,5,10,31.193]
    ,[0.607,43.2,0.5,0,0,0,2,0.3,0.5,0.5,7,0.1,0.1,0.5,5,10,29.693]
    ,[0.607,43.2,1,0,0,0,2,0.3,0.5,0.5,7,0.1,0.1,0.5,5,10,29.193]
    ,[0.607,43.2,0.5,0,0.5,0,0,0.3,0.5,0.5,12,0.1,0.1,0.5,5,10,26.193]
    ,[0.59,43.2,0.5,0,0.5,0,2,0.3,0.5,0.5,7,0.1,0.1,0.5,5,10,29.21]]

y = [5.35,2.7,2.65,3.94,5.4,5.04,2.7,2.65,3.94,1.97,3.36,3.53,3.92,4.31,4.32,4.4]

print (clf.fit(X, y))

print (clf.predict([[0.54,39,0.5,0,0,0,2,0.3,0.5,0.5,7,0.1,0.1,0.5,5,10,33.960]]))

print (clf.predict([[0.54,39,1.5,0,0.5,0,0,0.3,0.5,0.5,7,0.1,0.1,0.5,5,10,34.46]]))

print (clf.predict([[0.54,43.6,0.5,0,0.5,0,0,0.3,0.5,0.5,7,0.1,0.1,0.5,5,10,30.86]]))

print (clf.predict([[0.54,43.6,0.5,0,0.5,2.5,0,0.3,0.5,0.5,7,0.1,0.1,0.5,5,10,28.36]]))

print (clf.predict([[0.59,43.2,0.5,0,0.5,0,2,0.3,0.5,0.5,7,0.1,0.1,0.5,5,10,29.21]]))

print (clf.score(X, y))